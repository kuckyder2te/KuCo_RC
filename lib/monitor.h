#pragma once
/*  File name : 
    Project name : KuCo_Phantom 1
    Author: Wilhelm Kuckelsberg
    Date : 2022-

    Description : Drohne
 
*/

#include <Arduino.h>
#include <TaskManager.h>
#include <print.h>
#include <stdio.h>

#include "model.h"

//#define LOCAL_DEBUG
#include "myLogger.h"

 //#define TEST

 //Adafruit_PCD8544 display = Adafruit_PCD8544(NOKIA_CLK, NOKIA_DIN, NOKIA_DC, NOKIA_CS, NOKIA_RST);

static const unsigned char PROGMEM logo[] = 
{
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x80, 0xC0, 0xC0, 0xE0, 0x70, 0x70, 0xF8, 0xFC, 0xFA, 0x81, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0xF0, 0xF0, 0xF0, 0xF0,
0xF8, 0xF0, 0xE0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x80, 0x80, 0x80, 0xFC, 0xF8, 0xF8, 0xE0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x10, 0x20, 0x40, 0xC0, 0x80,
0x08, 0x04, 0x02, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x07, 0x07,
0x07, 0x0F, 0x0F, 0x0E, 0x1E, 0x1E, 0x3C, 0x3C, 0x3C, 0x78, 0xF8, 0xFC, 0xFC, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFC, 0xF8, 0xF8, 0x38, 0x3C, 0x3C,
0x1C, 0x1E, 0x0E, 0x0E, 0x0F, 0x07, 0x07, 0x07, 0x03, 0x03, 0x07, 0x03, 0x00, 0x01, 0x01, 0x03,
0x07, 0x06, 0x08, 0x10, 0x00, 0x80, 0xC0, 0xE0, 0x30, 0x18, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xF9, 0xFF, 0xFE, 0xFC, 0xF8, 0xF8, 0xF0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF0,
0xF8, 0xF8, 0xF8, 0x7C, 0x7C, 0x7C, 0x7E, 0x3E, 0x3E, 0x3F, 0x1E, 0x1E, 0x1E, 0x0F, 0x0F, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0x0F, 0x0E, 0x1E, 0x1E, 0x1F, 0x3E, 0x3E, 0x7E, 0x7E, 0x7C, 0x7C, 0xFC, 0xF8, 0xF8, 0xF8, 0xF0,
0xF0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF8, 0xFC, 0xFF, 0xFD, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x7F, 0xFF, 0x87, 0x07, 0x03, 0x03, 0x03,
0x03, 0x03, 0x03, 0x07, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0x3F, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0x09, 0x0F, 0x0F, 0x07, 0x03, 0x03, 0x03, 0x07, 0xCF, 0xFF, 0x1F, 0x07, 0x02,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F,
0x7C, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x07, 0x07, 0x07,
0x07, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x7E, 0x07,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

char strBuf[100];

class Monitor : public Task::Base {

protected:
    Adafruit_PCD8544* _nokia;

private:
    model_t *_model;
    // int diff;
    // int mid = 24;

public:
    Monitor(const String& name)
    : Task::Base(name) {
    }

    virtual ~Monitor() {}

    Monitor *setModel(model_t *_mod)
    { // RÃ¼ckgabe wert ist das eigene Objekt (this)
        LOGGER_VERBOSE("Enter....");
        _model = _mod;
        LOGGER_VERBOSE("....leave");
        return this;
    } /*--------------------- end of setModel -----------------------------------------*/

     virtual void begin() override {

        _nokia = new Adafruit_PCD8544(NOKIA_CLK, NOKIA_DIN, NOKIA_DC, NOKIA_CS, NOKIA_RST);
        
        _nokia->begin();
         _nokia->setContrast(60);
          _nokia->display();
        delay(100);
        _nokia->clearDisplay();
        _nokia->drawBitmap(0, 0, logo, 84, 48, 1);
        _nokia->display();
        
        // _nokia->display();
        // _nokia->setTextSize(2);
        // _nokia->setTextColor(BLACK);
        // _nokia->setCursor(0, 0);
        // _nokia->println("Kucky");
        // _nokia->setCursor(10, 25);
        // _nokia->println("Copter");
        // _nokia->display();
        delay(5000);
        _nokia->clearDisplay();
     }/*--------------------- end of begin -----------------------------------------*/

    virtual void update() override {

        #ifdef TEST

        sprintf(strBuf, "/*%i, %i, %i, %i, %i, %i, %i, %i, %i*/\r\n",
            _model->interfaceController.throttle,
            _model->interfaceController.yaw,
            _model->interfaceController.pitch,
            _model->interfaceController.roll,            
            _model->interfaceController.altitude,
            _model->interfaceController.battery,
            _model->interfaceController.swi1State,
            _model->interfaceController.swi2State,
            _model->interfaceController.swi3State);
        Serial.print(strBuf);

        #else

        _nokia->clearDisplay();
        _nokia->setTextSize(1);
        _nokia->setTextColor(BLACK);
        _nokia->setCursor(0, 0);
        _nokia->println("Yaw : ");
        _nokia->setCursor(55, 0);
        _nokia->println(_model->RC_interface.RX_payload.yaw);

        _nokia->setCursor(0, 10);
        _nokia->println("Pitch : ");
        _nokia->setCursor(55, 10);
        _nokia->println(_model->RC_interface.RX_payload.pitch);

        _nokia->setCursor(0, 20);
        _nokia->println("Roll   : ");
        _nokia->setCursor(55, 20);
        _nokia->println(_model->RC_interface.RX_payload.roll);

        _nokia->setCursor(0, 30);
        _nokia->println("Alt.     : ");
        _nokia->setCursor(55, 30);
        _nokia->println(_model->RC_interface.RX_payload.altitude);

        _nokia->setCursor(0, 40);
        _nokia->print("To ground : ");
        _nokia->setCursor(55, 40);
        _nokia->println(_model->RC_interface.RX_payload.distance_down);

        _nokia->display();

        #endif
    }/*--------------------- end of upDate -----------------------------------------*/
};
/*------------------------- end of monitor class -----------------------------------*/
